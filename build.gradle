buildscript {
    apply from: 'dependencies.gradle'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'maven-publish'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

group = 'com.blueanvil'
version = '0.9.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        force "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.apache.kafka:kafka_2.12:$kafkaVersion"
    compile "org.apache.kafka:kafka-clients:$kafkaVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"

    testCompile "junit:junit:$junitVersion"
    testCompile "org.assertj:assertj-core:$assertjVersion"
    testCompile "org.slf4j:slf4j-log4j12:$slf4jVersion"
}

jacocoTestReport {
    additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(sourceSets.main.allSource.srcDirs)
    classDirectories = files(sourceSets.main.output)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

task runTools(type: Exec) {
    commandLine './tools.sh'
}

task stopTools(type: Exec) {
    commandLine './stop-tools.sh'
}

tasks.test.dependsOn("runTools")
test.finalizedBy(stopTools)

